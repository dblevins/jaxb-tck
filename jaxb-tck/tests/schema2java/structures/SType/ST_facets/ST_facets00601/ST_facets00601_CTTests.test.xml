<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE TestGroup SYSTEM "testgenspec.dtd">
<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<TestGroup ID="ST_facets00601_">
    <TestGroupDocumentation>
        <Title><![CDATA[Enumeration values contain several punctuation characters. (content tree test)]]></Title>
        <Description><![CDATA[Declare a simple type based on NCName and restricted with 7 enumeration 
        values that has the following punctuation characters:
        hyphen ('-', \u002D, HYPHEN-MINUS), period ('.', \u002E, FULL STOP),
        underscore ('_', \u005F, LOW LINE),
        dot ('.', \u00B7, MIDDLE DOT), \u0387, GREEK ANO TELEIA,
        \u06DD, ARABIC END OF AYAH and \u06DE, ARABIC START OF RUB EL HIZB.

        The document uses each of the values.
        ]]></Description>
    </TestGroupDocumentation>
    <TestGroupAttributes>
        <AttrElem Name="scInfo">@(#)ST_facets00601_CTTests.test.xml	1.3 08/01/24</AttrElem>
        <AttrElem Name="testType">JAXBXMLSchemaTest</AttrElem>
    </TestGroupAttributes>
    <CodeSet>
        <ExternalSupportClass SourceName="ST_facets00601.xsd"/>
        <ExternalData Type="iodata" SourceName="ST_facets00601_.sig"/>
    </CodeSet>
    <TestCase ID="EnumConstant001">
        <TestCaseDocumentation>
            <Title><![CDATA[General check of the enum constants.]]></Title>
            <Description><![CDATA[
                The test checks that all enum constants are different.
            ]]></Description>
            <Author>Evgueni Rouban</Author>
        </TestCaseDocumentation>
        <CodeSet>
            <ExternalData Type="iodata" SourceName="ST_facets00601_p.xml"/>
            <ExternalData Type="iodata" SourceName="st_facets00601_-ST_facets00601_p.jbx"/>
        </CodeSet>
        <TestCode><![CDATA[
        S [] enumConst = {
            S.A_A, S.B_B, S.C_C, S.D_D, S.E_E, S.F_F, S.G_G
        };

        String failure = "";

        for(int i = enumConst.length; --i >= 0;) {
            for(int j = i; --j >= 0;) {
                if (enumConst[i] == enumConst[j]) {
                    failure += "; " + enumConst[i] + " == " + enumConst[j];    
                }
                if (enumConst[i].equals(enumConst[j])) {
                    failure += "; " + enumConst[i] + " equals to " + enumConst[j];    
                }
            } 
        } 

        if (failure.length() == 0) {
            return Status.passed("OK");
        }

        return Status.failed(failure.substring(2));
        ]]></TestCode>
    </TestCase>
    <TestCase ID="EnumConstant002">
        <TestCaseDocumentation>
            <Title><![CDATA[General check of the enumvalue constants.]]></Title>
            <Description><![CDATA[
                The test checks that all enumvalue constants are different strings.
            ]]></Description>
            <Author>Evgueni Rouban</Author>
        </TestCaseDocumentation>
        <CodeSet>
            <ExternalData Type="iodata" SourceName="ST_facets00601_p.xml"/>
            <ExternalData Type="iodata" SourceName="st_facets00601_-ST_facets00601_p.jbx"/>
        </CodeSet>
        <TestCode><![CDATA[
        String [] enumValueConst = {
            S._A_A, S._B_B, S._C_C, S._D_D, S._E_E, S._F_F, S._G_G
        };

        String failure = "";

        for(int i = enumValueConst.length; --i >= 0;) {
            for(int j = i; --j >= 0;) {
                if (enumValueConst[i].equals(enumValueConst[j])) {
                    failure += "; \"" + enumValueConst[i] + "\" equals to \"" + enumValueConst[j] + "\"";    
                }
            } 
        } 

        if (failure.length() == 0) {
            return Status.passed("OK");
        }

        return Status.failed(failure.substring(2));
        ]]></TestCode>
    </TestCase>
    <TestCase ID="Get001">
        <TestCaseDocumentation>
            <Title><![CDATA[General check of the get method.]]></Title>
            <Description><![CDATA[
                The test unmarshals ST_facets00601_p.xml and expects the returned object
                to contain a list with all enumeration values.
            ]]></Description>
            <Author>Evgueni Rouban</Author>
        </TestCaseDocumentation>
        <CodeSet>
            <Import>java.util.List</Import>
            <ExternalData Type="iodata" SourceName="ST_facets00601_p.xml"/>
            <ExternalData Type="iodata" SourceName="st_facets00601_-ST_facets00601_p.jbx"/>
        </CodeSet>
        <TestCode><![CDATA[
        S [] enumConst = {
            S.A_A, S.B_B, S.C_C, S.D_D, S.E_E, S.F_F, S.G_G
        };
        Root root = (Root)unmarshal("ST_facets00601_p.xml");
        String failure = "";
        List list = root.getVal();

        if (list.size() != 7) {
            failure += "; list.size() == " + list.size();
        }

        for(int i = enumConst.length; --i >= 0;) {
            if (!list.contains(enumConst[i])) {
                failure += "; " + enumConst[i] + " is not found in the list";    
            } 
        }

        if (failure.length() == 0) {
            return Status.passed("OK");
        }

        return Status.failed(failure.substring(2));
        ]]></TestCode>
    </TestCase>
</TestGroup>
