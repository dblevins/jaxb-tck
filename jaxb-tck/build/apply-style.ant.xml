<?xml version="1.0"?>
<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<!-- ======================================================================
  
  SCCS: @(#)apply-style.ant.xml	1.4 07/04/20
  ====================================================================== -->
<project name="apply-style" default="generate-script">
  <description></description>

  <dirname file="${ant.file}" property="tck.build.ws.dir" />
  <ant antfile="${tck.build.ws.dir}/convert-properties.ant.xml"
    target="default" />
  <property file="build.properties" />
  <property name="build.precompile.dir.loc"
    location="${build.precompile.dir}" />
  <property name="xsl.dir" location="${tck.build.ws.dir}" />
  <property name="keywords.file" location="${tck.build.ws.dir}/keywords.xml" />
  <property name="skip-convert-properties" value="true"/>
  <property name="tostyle.file" value="tostyle.xml" />

  <import file="${tostyle.file}" />

  <macrodef name="forkant">
    <attribute name="file" />
    <sequential>
      <ant target="check-if-testxml-exists" antfile="${ant.file}" dir="@{file}">
        <property name="current.dir" value="@{file}" />
      </ant>
    </sequential>
  </macrodef>
	
  <target name="check-if-testxml-exists">
    <fileset id="test-xml-files-set" dir="." includes="*.test.xml" />
    <pathconvert targetos="unix" property="testxml-files.property"
      refid="test-xml-files-set">
    </pathconvert>
    <condition property="testxml-files-exists">
      <not>
        <equals arg1="${testxml-files.property}" arg2="" />
      </not>
    </condition>
    <antcall target="generate-script">
	</antcall>
  </target>

  <target name="generate-script" if="testxml-files-exists">
    <pathconvert property="test-path" targetos="unix" pathsep="">
      <path path="${current.dir}" />
      <mapper type="regexp"
        from="(${build.precompile.dir.loc}/tests/)(.*)"
        to="\2/" />
    </pathconvert>
    <echo>Suite is: ${test-path}</echo>
    <copy file="${build.dir}/dtd/testgenspec.dtd" todir="${basedir}"
      flatten="true" />
    <style style="${xsl.dir}/create-common-script.xsl" extension=".tmp"
      destdir="${current.dir}" basedir="${current.dir}"
      includes="*.test.xml">
      <size when="more" value="1" />
      <param name="path-separator" expression="${file.separator}" />
      <param name="test-path" expression="${test-path}" />
      <param name="importFile" expression="${build.dir}/commontest.xml" />
      <param name="propertyFile"
        expression="${build.dir}/build.properties" />
      <param name="keywords-file" expression="${keywords.file}" />
      <classpath>
      	<pathelement path="${build.dir}/classes"/>
      </classpath>
    </style>
    <style style="${xsl.dir}/format-script.xsl" extension=".ant.xml"
      destdir="${basedir}" includes="*.tmp" />
    <!--
      <delete>
      <fileset dir="." includes="*.tmp" />
      </delete>
    -->
    <replaceregexp byline="true"
      match="(javasoft.sqe.tests.*\.)([0-9])(.*)" replace="\1_\2\3">
      <fileset dir="." includes="*.ant.xml" />
    </replaceregexp>
  </target>

</project>
