#
# Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0, which is available at
# http://www.eclipse.org/legal/epl-2.0.
#
# This Source Code may also be made available under the following Secondary
# Licenses when the conditions for such availability set forth in the
# Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
# version 2 with the GNU Classpath Exception, which is available at
# https://www.gnu.org/software/classpath/license.html.
#
# SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
#

#  @(#)tckwiz.properties	1.31 05/31/07 17:54:51

title=JAXB TCK Configuration Editor

# Group of introductory questions
# Name of configuration, it is useful for recognizing different interview configurations
StandardInterview.envName.smry=Configuration Name
StandardInterview.envName.text=Provide a short identifier that names the configuration you are creating.
# Interview configuration description
StandardInterview.description.smry=Description
StandardInterview.description.text=Provide a short description that identifies the configuration you are creating.
# Choice of same or multi JVM. Answer will affect both schema generating and schema compilation.
TestPlatformInterview.multiJVM.smry=Execution Mode
TestPlatformInterview.multiJVM.text=Would you like to start a new instance of your product from a command line each time when a new test is executed?
# If work is local, then questions about file and path separators will be omitted
TestPlatformInterview.local.smry=Execute Locally
TestPlatformInterview.local.text=Will you execute tests on the same system you are using for this interview?
####################################################
# Questions for configuring of JavaTest Agent
# File separator ("/" - for Unix, "\" - for Windows)
AgentModeInterview.fileSeparator.smry=Test Platform File Separator
AgentModeInterview.fileSeparator.text=What is the file separator character on the test platform? 
# Path separator (":" - for Unix, ";" - for Windows)
AgentModeInterview.pathSeparator.smry=Test Platform Path Separator
AgentModeInterview.pathSeparator.text=What is the path separator character on the test platform?
# Agent map file is used to associate values used on the JavaTest Agent with those used by JavaTest.
AgentModeInterview.mapArgs.smry=Agent Map File
AgentModeInterview.mapArgs.text=Will you use a map file when you run the JavaTest Agent?
# Choice of active or passive Agent.
AgentModeInterview.agentType.smry=Agent Type
AgentModeInterview.agentType.text=The JavaTest Agent can run in one of two modes: active or passive.\n\nWhich type of agent do you wish to use?
# Passive Agent host
AgentModeInterview.agentPassiveHost.smry=Passive Host
AgentModeInterview.agentPassiveHost.text=What is the name of the system on which you run the tests?
# Question whether Agent port should be configured of default port will be used.
AgentModeInterview.useAgentPortDefault.smry=Default Agent port
AgentModeInterview.useAgentPortDefault.text=Do you wish to use the default port for JavaTest to contact the JavaTest Agent?
# User defined value of Agent port
AgentModeInterview.agentPassivePort.smry=Passive Port
AgentModeInterview.agentPassivePort.text=Which port do you wish JavaTest to use to contact the JavaTest Agent?
####################################################
# Questions of environment
# To specify environment variables. Variables that are expected to be specified: JAVA_HOME. The question is needed for multi JVM mode.
CmdLineInterview.otherEnvVars.smry=Other Environment Variables
CmdLineInterview.otherEnvVars.text=If there are any other environment variables required for tests execution, enter them here.\n\nUse the format:   name1=value1 name2=value2 etc.
# Path to java executable (for multi JVM mode)
CmdLineInterview.cmdAsFile.smry=Java Launcher
CmdLineInterview.cmdAsFile.text=Enter the full path name of the Java launcher that runs the tests.
# java command-line options
CmdLineInterview.otherOpts.smry=Other Options
CmdLineInterview.otherOpts.text=If there are any other command-line options that must be set for the Java launcher, enter them here.\n\nYou might want to use options that enable different operating modes, such as -Xint, -Xfuture, etc.
#
JAXBClassesInterview.needJaxbClasses.smry=Need extra JAXB Classes
JAXBClassesInterview.needJaxbClasses.text=Do you need to specify extra JAXB classes for the Java launcher to execute tests?
#
JAXBClassesInterview.jaxbClasses.smry=Location of JAXB Classes
JAXBClassesInterview.jaxbClasses.text=Enter the name(s) of the directories and/or the Zip/JAR archives that contain classes for your JAXB.

####################################################
# Questions about schema compiler
XSDCompilerInterview.intro.smry=Schema Compiler Questions...
XSDCompilerInterview.intro.text=The following questions collect information about how to compile the source schema on your platform.

# Choice of operation mode. In default operation mode errors must be reported when alternative/extension non-required features are encountered.
XSDCompilerInterview.defaultOperationMode.smry=Schema Compiler Operation Mode
XSDCompilerInterview.defaultOperationMode.text=Would you like to run your schema compiler in default operation mode?

# Tests on validation can be skipped
XSDCompilerInterview.skipValidationOptional.smry=Optional XML Validation Tests
XSDCompilerInterview.skipValidationOptional.text=Is Schema Validation implemented via mechanism different from JAXP?

# Path to schema compiler executable (for multi JVM mode)
XJCCmdLineInterview.xjcCmd.smry=Schema Compiler Run Command
XJCCmdLineInterview.xjcCmd.text=Enter the command to run the schema compiler you use to compile schemas.

# Schema compiler class (for same JVM mode). RI class: com.sun.jaxb_tck.lib.Xjc
XJCClassInterview.compilerWrapperClass.smry=Schema Compiler Class
XJCClassInterview.compilerWrapperClass.text=You must provide a custom class to invoke your compiler. This class should implement the com.sun.jaxb_tck.lib.SchemaCompilerTool interface.\n\nWhat is the name of the compiler class you provide?
###############################################
# Questions about schema generator 
SchemagenInterview.intro.smry=Schema Generator Questions
SchemagenInterview.intro.text=The following questions collect information about how to generate xml schema from java sources on your platform.

# Schema genration from java source is optional and can be skipped
SchemagenInterview.skipJ2XOptional.smry=Schema Generator presence
SchemagenInterview.skipJ2XOptional.text=Does your implementation provide schema generator which is able to generate schemas from java sources?

# Schema generator class (for same JVM mode).
JXCClassInterview.schemagenWrapperClass.smry=Schema Generator Class
JXCClassInterview.schemagenWrapperClass.text=You must provide a custom class to invoke your schema generator. This class should implement the com.sun.jaxb_tck.lib.SchemaGenTool interface.\n\n What is the name of the generator class you provide?

# Path to schemagen executable (for multi JVM mode)
JXCCmdLineInterview.jxcCmd.smry=Schema Generator Run Command
JXCCmdLineInterview.jxcCmd.text=Enter the command to run the schema generator.

# Null-question before set of standard JavaTest questions such as "Specify Tests to Run?", "Specify an Exclude List?" and so on.
JAXBTCKParameters.parameters.smry=Standard Values...
JAXBTCKParameters.parameters.text=The remaining questions ask which tests you want to run and how you want them to be run.
