/*
 * Copyright (c) 2002, 2020 Oracle and/or its affiliates. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0, which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the
 * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
 * version 2 with the GNU Classpath Exception, which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 */

package com.sun.jmpp.lib;

import java.io.File;

/**  
 * Class for generation HTML test description basing on JmppLibTest variable set.
 *
 * @author Oleg Oleinik
 * @version @(#)HTMLTDGenerator.java	1.10 04/03/01
 */


public class HTMLTDGenerator implements TDGenerator {

/**
 * The method which is the entry point for test description generation.
 * @param lib JmppLibTest instance, HTML test description is generated 
 * basing on its variable set.
 */
    public void makeTD(JmppLibTest lib){
	lib.setOutput(false, lib.test, "html");
lib.L("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.X//EN\">");
lib.L("<html>");
lib.L("<head>");
lib.L("<title>"+lib.test+"</title>");
lib.L("</head>");
lib.L("<body>");
lib.L("See assertion <a href=\"../"+lib.asrt+".html\"> here </a>.");
lib.L("<p><hr><p>");
lib.L("<b><big> TEST "+lib.test+" - "+lib.title+" </big></b>");
lib.L("<p><hr>");
lib.L("<h3>DESCRIPTION</h3>");
lib.L(lib.description);
lib.L("<h3>COMMENTS</h3>");
if (lib.testComments!=null)
	lib.L(lib.testComments);
lib.L("<h3>FILES</h3>");
lib.L("<ul>");
String fName;
for (int i=0; i<lib.filesSectionList.size(); i++) {
	fName = lib.filesSectionList.elementAt(i).toString();
	lib.L("<li><a href=\""+fName+"\">"+fName+"</a> ");
}
lib.L("</ul>");
lib.L("<hr>");

// make list of source files to insert to the HTML
String sources[] = new String[lib.sourceFiles.size()];
if (lib.sourceList!=null) {
	sources=lib.sourceList;
	lib.sortFileArrayAccordingToSuppliedByTemplateSourceList();
}
else
	lib.sourceFiles.copyInto(sources);
String sourcesList="";
for (int i=0; i<sources.length; i++)
	sourcesList+=" <a href=\""+sources[i]+"\">"+sources[i]+"</a> ";
sourcesList.trim();

lib.L("<table border=1 class=TestDescription>");
lib.L("<tr><td><b>title</b></td><td>"+lib.test+" - "+lib.title+" </td></tr>");
lib.L("<tr><td><b>name</b></td><td>"+lib.test+"</td></tr>");
lib.L("<tr><td><b>source</b></td><td>"+sourcesList+"</td></tr>");
lib.L("<tr><td><b>executeClass</b></td><td>"+lib.executeClass+"</td></tr>");
	if (lib.executeArgs!=null)
lib.L("<tr><td><b>executeArgs</b></td><td>"+lib.executeArgs+"</td></tr>");
lib.L("<tr><td><b>keywords</b></td><td>"+lib.keywords+"</td></tr>");
	if (lib.testTimeout>0)
lib.L("<tr><td><b>timeout</b></td><td>"+lib.testTimeout+"</td></tr>");
	if (lib.properties!=null)
lib.L("<tr><td><b>context</b></td><td>"+lib.properties+"</td></tr>");
lib.L("</table>");
lib.L("<br>");
lib.L("<hr>");
lib.LN("<!-- File: @(#)"+lib.currentFileName);

if (lib.insertAutoGenerated)
	lib.LN(" generated from: "+lib.sccs);

lib.L("");
lib.L("Created by "+lib.testDeveloper);
lib.L("-->");
        String crn_file = lib.tckCopyrightFile;
        String crn = crn_file == null ? null : ".." + File.separator + crn_file;

        lib.L(lib.getCopyrightInfoHtml(crn_file));
lib.L("</body>");
lib.L("</html>");

    lib.closeOut();
    }
}
